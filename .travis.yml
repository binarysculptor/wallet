sudo: required
dist: trusty
os: linux
language: ruby
cache:
  ccache: true
  directories:
  - depends/built
  - depends/sdk-sources
  - $HOME/.ccache
stages:
  - build
env:
  global:
    - MAKEJOBS=-j4
    - RUN_UNIT_TESTS=true
    - RUN_FUNCTIONAL_TESTS=false # Not Yet Implemented
    - RUN_BENCH=false  # Set to true for any one job that has debug enabled, to quickly check bench is not crashing or hitting assertions
    - DOCKER_NAME_TAG=ubuntu:18.04
    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
    - CCACHE_SIZE=100M
    - CCACHE_TEMPDIR=/tmp/.ccache-temp
    - CCACHE_COMPRESS=1
    - CCACHE_DIR=$HOME/.ccache
    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
    - SDK_URL=https://bitcoincore.org/depends-sources/sdks
    - WINEDEBUG=fixme-all
    - DOCKER_PACKAGES="build-essential libtool autotools-dev automake autoconf doxygen pkg-config bsdmainutils curl git ca-certificates ccache"
services:
  - docker
before_install:
  - set -o errexit; source .travis/build_01_before_install.sh
install:
  - set -o errexit; source .travis/build_02_install.sh
before_script:
  - set -o errexit; source .travis/build_03_before_script.sh
script:
  - set -o errexit; source .travis/build_04_script.sh
after_script:
    - echo $TRAVIS_COMMIT_RANGE
    - echo $TRAVIS_COMMIT_LOG
jobs:
  include:
# Win32
    - stage: build
      env: >-
        HOST=i686-w64-mingw32
        DPKG_ADD_ARCH="i386"
        DEP_OPTS="NO_QT=1"
        PACKAGES="python3 nsis g++-mingw-w64-i686 mingw-w64-i686-dev wine-binfmt wine32"
        GOAL=""
        BITCOIN_CONFIG="--enable-reduce-exports"
# Win64
    - stage: build
      env: >-
        HOST=x86_64-w64-mingw32
        DEP_OPTS="NO_QT=1"
        PACKAGES="python3 nsis g++-mingw-w64-x86-64 mingw-w64-x86-64-dev wine-binfmt wine64"
        GOAL=""
        BITCOIN_CONFIG="--enable-reduce-exports"
# 32-bit + dash
    - stage: build
      env: >-
        HOST=i686-pc-linux-gnu
        PACKAGES="g++-multilib python3-zmq"
        DEP_OPTS="NO_QT=1"
        GOAL=""
        BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++"
        CONFIG_SHELL="/bin/dash"

# x86_64 Linux (uses qt5 dev package instead of depends Qt to speed up build and avoid timeout)
    - stage: build
      env: >-
        HOST=x86_64-unknown-linux-gnu
        PACKAGES="python3-zmq qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev libprotobuf-dev"
        DEP_OPTS="NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1"
        GOAL=""
        BITCOIN_CONFIG="--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER"

# Cross-Mac
    - stage: build
      env: >-
        HOST=x86_64-apple-darwin14
        PACKAGES="cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev python3-setuptools-git qrencode
        OSX_SDK=10.11
        RUN_UNIT_TESTS=false
        RUN_FUNCTIONAL_TESTS=false
        GOAL="deploy"
        BITCOIN_CONFIG="--enable-gui --enable-reduce-exports --enable-werror"

before_deploy:
    - ./pre-deploy.sh
    - JOB_PLATFORM="$(cut -d'.' -f2 <<<$TRAVIS_JOB_NUMBER)"
    - CONFIG_FILE=$TRAVIS_BUILD_DIR/src/config/liberty-config.h
    - VERSION_MAJOR=`sed -n 's/#define CLIENT_VERSION_MAJOR \([0-9]*$\)/\1/p' $CONFIG_FILE`
    - VERSION_MINOR=`sed -n 's/#define CLIENT_VERSION_MINOR \([0-9]*$\)/\1/p' $CONFIG_FILE`
    - VERSION_REVISION=`sed -n 's/#define CLIENT_VERSION_REVISION \([0-9]*$\)/\1/p' $CONFIG_FILE`
    - VERSION_BUILD=`sed -n 's/#define CLIENT_VERSION_BUILD \([0-9]*$\)/\1/p' $CONFIG_FILE`
    - CLIENT_VERSION="$VERSION_MAJOR.$VERSION_MINOR.$VERSION_REVISION.$VERSION_BUILD"
    - wget https://s3.amazonaws.com/liberty-assets/discord-travis-notification.sh
    - chmod +x discord-travis-notification.sh
    - ./discord-travis-notification.sh $TRAVIS_TEST_RESULT $WEBHOOK_URL $CLIENT_VERSION $JOB_PLATFORM
    - echo CLIENT_VERSION=$CLIENT_VERSION
    - echo JOB_PLATFORM=$JOB_PLATFORM

deploy:
  provider: s3
  access_key_id: $S3_ACCESS_KEY
  secret_access_key: $S3_SECRET
  bucket: $S3_BUCKET
  skip_cleanup: true
  local_dir:  $OUTDIR/zip
  upload-dir: $CLIENT_VERSION
  acl: public_read
  on:
    all_branches: true